/*A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, 
it reads the same forward and backward. Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.*/

/* Questions to be asked
1.non-aplhanumeric includes whitespaces also?
2.Can we consider the entered string is not NULL
3.How long is the string?

*Algorithm
->first traverse the string and remove the non alpha numeric characters
->make all upper case letters as lower case letters and store it in string 1
->string reverse
->compare string1 and reversed string
->if they are equal,it returns true,else false

code:
#include<stdio.h>
#include<string.h>
int main()
{
    char str[] = "A man, a plan, a canal: Panama";
    char str2[50];
    int i;
    
    int k=0;
    
    for(i=0;i<strlen(str);i++)
    {
        if((str[i] >= 'A') && (str[i] <= 'Z'))
         str2[i] = str[i]+32;
           //printf("%c",str2[i]);
        else if ((str[i] >= 'a' )&& (str[i] <= 'z') )
         str2[i]=str[i];
          
        else if(str[i] == ' ')
          //i=i+1;
         str2[i]=str[i+k];
         k++;
         i--;
        
     }
     printf("%s",str2);
}

test cases:
1.string is NULL
2.OK and NOK strings

